[1mdiff --git a/libraries/ESP8266SdFat b/libraries/ESP8266SdFat[m
[1m--- a/libraries/ESP8266SdFat[m
[1m+++ b/libraries/ESP8266SdFat[m
[36m@@ -1 +1 @@[m
[31m-Subproject commit af4ed0c5ec3084cb3883df51ec2052791ca2bff2[m
[32m+[m[32mSubproject commit af4ed0c5ec3084cb3883df51ec2052791ca2bff2-dirty[m
[1mdiff --git a/tests/device/Makefile b/tests/device/Makefile[m
[1mindex ff31b037..cefd29b8 100644[m
[1m--- a/tests/device/Makefile[m
[1m+++ b/tests/device/Makefile[m
[36m@@ -104,7 +104,7 @@[m [mifneq ("$(NO_RUN)","1")[m
 endif[m
 [m
 $(TEST_REPORT_XML): $(HARDWARE_DIR) virtualenv[m
[31m-	$(SILENT)$(BS_DIR)/virtualenv/bin/xunitmerge $(shell find $(BUILD_DIR) -name 'test_result.xml') $(TEST_REPORT_XML)[m
[32m+[m	[32m$(SILENT)$(BS_DIR)/virtualenv/bin/xunitmerge $(shell find $(BUILD_DIR) -name 'test_result.xml' | xargs echo) $(TEST_REPORT_XML)[m
 [m
 $(TEST_REPORT_HTML): $(TEST_REPORT_XML) | virtualenv[m
 	$(SILENT)$(BS_DIR)/virtualenv/bin/junit2html $< $@[m
[1mdiff --git a/tests/device/test_http_server/test_http_server.py b/tests/device/test_http_server/test_http_server.py[m
[1mindex 0c4ab56a..e1e220db 100644[m
[1m--- a/tests/device/test_http_server/test_http_server.py[m
[1m+++ b/tests/device/test_http_server/test_http_server.py[m
[36m@@ -15,7 +15,7 @@[m [mdef http_test(res, url, get=None, post=None):[m
         if post:[m
             post = urllib.parse.urlencode(post)[m
         request = urllib.request.urlopen(url, post, 2)[m
[31m-        response = request.read()[m
[32m+[m[32m        response = request.read().decode('utf-8')[m
     except:[m
         return 1[m
     if response != res:[m
[36m@@ -61,7 +61,7 @@[m [mdef setup_http_upload(e):[m
             p = MultipartParam("file", "0123456789abcdef", "test.txt", "text/plain; charset=utf8")[m
             datagen, headers = multipart_encode( [("var4", "val with spaces"), p] )[m
             request = urllib.request.Request('http://etd.local/upload', datagen, headers)[m
[31m-            response = urllib.request.urlopen(request, None, 2).read()[m
[32m+[m[32m            response = urllib.request.urlopen(request, None, 2).read().decode('utf-8')[m
         except:[m
             return 1[m
         if response != 'test.txt:16\nvar4 = val with spaces':[m
